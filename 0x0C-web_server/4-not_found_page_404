#!/usr/bin/env bash
# Configures a new Ubuntu machine by installing Nginx,
# configuring it to listen on port 80, and serving a basic website.

# Update package lists and install Nginx
echo -e "Updating and installing Nginx.\n"
sudo apt-get update -y -qq && \
sudo apt-get install nginx -y

echo -e "\nSetting up Nginx.\n"

# Start Nginx service
sudo service nginx start

# Allow Nginx through the firewall
echo -e "Allowing Nginx through the firewall.\n"
sudo ufw allow 'Nginx HTTP'

# Give the user ownership of website files for easy editing
echo -e "Setting permissions for website files.\n"
sudo chown -R "$USER":"$USER" /var/www/html
sudo chmod -R 755 /var/www/html

# Backup default index
echo -e "Backing up default index.\n"
cp /var/www/html/index.nginx-debian.html /var/www/html/index.nginx-debian.html.bckp

# Create a new index with "Hello World!" content
echo -e "Creating new index page.\n"
echo "Hello World!" > /var/www/html/index.nginx-debian.html

# Set up a redirect
echo -e "Setting up a redirect.\n"
sudo sed -i '24i\	rewrite ^/redirect_me https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;' /etc/nginx/sites-available/default

# Set up a custom 404 error page
echo -e "Setting up a custom 404 error page.\n"
echo "Ceci n'est pas une page" > /var/www/html/error_404.html
sudo sed -i '25i\	error_page 404 /error_404.html;' /etc/nginx/sites-available/default

# Restart Nginx to apply changes
echo -e "Restarting Nginx.\n"
sudo service nginx restart

echo -e "\nCompleted.\n"
